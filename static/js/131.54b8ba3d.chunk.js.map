{"version":3,"file":"static/js/131.54b8ba3d.chunk.js","mappings":"4OACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAuF,yB,SCiBvF,EAdmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACpB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAA9B,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAML,UAAWC,EAA5C,SACGE,EAAMG,SAFFH,EAAME,GADA,KAStB,ECfD,EAAgC,kCAAhC,EAA+E,+BAA/E,EAA6H,iCC4B7H,EA1BmB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,OACE,gBAAKV,UAAWC,EAAhB,UACE,kBAAMM,SAPW,SAAAI,GACnBA,EAAEC,iBACFL,EAASE,EACV,EAIG,WACE,kBACEI,KAAK,OACLC,MAAOL,EACPM,SAAU,SAAAJ,GAAC,OAAID,EAASC,EAAEK,OAAOF,MAAtB,EACXG,YAAY,gBACZjB,UAAWC,KAEb,mBAAQY,KAAK,SAASb,UAAWC,EAAjC,wBAMP,EC1BD,EAA4B,0BAA5B,EAA8D,sBCIxDiB,EAAS,mCAiCf,EA/Be,WACb,OAA0CV,EAAAA,EAAAA,UAAS,IAAnD,eAAOW,EAAP,KAAsBC,EAAtB,KAqBA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAE2BC,MAAM,4DAAD,OAA6DJ,IAF7F,cAEUK,EAFV,gBAGuBA,EAASC,OAHhC,OAGUC,EAHV,OAIIL,EAAiBK,EAAKC,SAJ1B,kDAMIC,QAAQC,MAAM,kCAAd,MANJ,2DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,KAGD,iBAAK7B,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,4BACA,SAAC,EAAD,CAAYM,SAtBK,SAAAE,GACnBa,MAAM,qDAAD,OAAsDJ,EAAtD,kBAAsET,IACxEqB,MAAK,SAAAP,GAAQ,OAAIA,EAASC,MAAb,IACbM,MAAK,SAAAL,GAAI,OAAIL,EAAiBK,EAAKC,QAA1B,GACb,KAmBG,SAAC,EAAD,CAAY3B,OAAQoB,MAGzB,C,sBCpCD,SAASY,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBxB,EAAQyB,EAAKzB,KAInB,CAHE,MAAOc,GAEP,YADAM,EAAON,EAET,CAEIW,EAAKC,KACPP,EAAQnB,GAER2B,QAAQR,QAAQnB,GAAOgB,KAAKK,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMrB,GACbiB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQtB,EAClE,CAEA,SAASsB,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/components/pages/Movies.module.css?de10","components/pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"link\":\"MoviesList_link__8rTGX\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ol className={styles.list}>\n      {movies.map(movie => (\n        <li key={movie.id} className={styles.item}>\n          <Link to={`/movies/${movie.id}`} className={styles.link}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"SearchForm_formContainer__npBBh\",\"inputField\":\"SearchForm_inputField__i8cMu\",\"searchButton\":\"SearchForm_searchButton__AQHxA\"};","import React, { useState } from 'react';\nimport styles from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <div className={styles.formContainer}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Search movies\"\n          className={styles.inputField}\n        />\n        <button type=\"submit\" className={styles.searchButton}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__WJzYR\",\"title\":\"Movies_title__SuBzv\"};","import React, { useState, useEffect } from 'react';\nimport MoviesList from '../MoviesList/MoviesList';\nimport SearchForm from '../SearchForm/SearchForm';\nimport styles from './Movies.module.css';\n\nconst apiKey = 'a4690865d7bdab2d42080cd491b22b8d';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSubmit = query => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`)\n      .then(response => response.json())\n      .then(data => setSearchResults(data.results));\n  };\n\n  useEffect(() => {\n    async function fetchTrendingMovies() {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`);\n        const data = await response.json();\n        setSearchResults(data.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    }\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>Search Movies</h2>\n      <SearchForm onSubmit={handleSubmit} />\n      <MoviesList movies={searchResults} />\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movies","className","styles","map","movie","to","id","title","onSubmit","useState","query","setQuery","e","preventDefault","type","value","onChange","target","placeholder","apiKey","searchResults","setSearchResults","useEffect","fetch","response","json","data","results","console","error","fetchTrendingMovies","then","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}